task.wait(30)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")

-- Webhook URLs
local warningWebhookURL = "https://discord.com/api/webhooks/1407393326470271037/owXazQEEx8jzooF8e2IjTfOMTypViIrgT5mUxw4vrbDyIofWv9P7dHg7rR5MMnpHTSz5"
local totalWebhookURL = "https://discord.com/api/webhooks/1378870715280789534/yyLNMSjXMJMSMf0WPvaX1BIvZZjQmwfNzZ5Ki4sgeDEFya_PIR3Jysylx9kbTtHrRwmF"

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ‡∏£‡∏≠‡πÉ‡∏´‡πâ Data GUI ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
local dataGui = playerGui:WaitForChild("Data")
local coinsObject = dataGui:WaitForChild("Coins")

-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
local lastCoinValue = coinsObject.Value
local lastUpdateTime = tick()
local checkInterval = 10 * 60 -- 10 ‡∏ô‡∏≤‡∏ó‡∏µ (600 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
local hasSentWebhook = false

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢: ‡∏™‡∏£‡πâ‡∏≤‡∏á JSON ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Webhook
local function createWebhookJson(content, title, color, fields)
    local embed = {
        title = title,
        color = color,
        fields = fields,
        footer = { text = "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: " .. os.date("%Y-%m-%d %H:%M:%S") }
    }
    return HttpService:JSONEncode({
        content = content,
        embeds = { embed },
        username = "‡πÄ‡∏´‡πá‡∏î Monitor",
        avatar_url = "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExcHlsanRvN3FoeXJiZzEyN2hmaWhzNW9wb3NldmhxeHlsYzRtOGQxYiZlcD12MV9naWZzX3NlYXJjaCZjdD1n/jlVObChD6Fb5C/giphy.gif"
    })
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: ‡∏™‡πà‡∏á Webhook
local function sendWebhookRequest(jsonData, url)
    local requestFunction = (syn and syn.request) or (http and http.request) or request
    if not requestFunction then
        return false
    end

    local success, response = pcall(function()
        return requestFunction({
            Url = url,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = jsonData
        })
    end)

    return success
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: ‡∏™‡πà‡∏á Webhook ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏´‡πá‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
local function sendCoinsWarningWebhook()
    local fields = {
        { name = "üë§ ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 4", value = "||" .. player.Name .. "||", inline = false },
        { name = "üçÑ ‡πÄ‡∏´‡πá‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î", value = "```" .. tostring(lastCoinValue) .. "```", inline = true },
        { name = "‚è∞ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤", value = "```10 ‡∏ô‡∏≤‡∏ó‡∏µ```", inline = true },
        { name = "‚ö†Ô∏è ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏", value = "```‡πÄ‡∏´‡πá‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 10 ‡∏ô‡∏≤‡∏ó‡∏µ```", inline = false }
    }

    local jsonData = createWebhookJson(
        "üö® **‡πÄ‡∏´‡πá‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á!**",
        "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏´‡πá‡∏î‡∏Ñ‡πâ‡∏≤‡∏á",
        16711680,
        fields
    )
    sendWebhookRequest(jsonData, warningWebhookURL)
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ Coins
local function checkCoins()
    local currentCoinValue = coinsObject.Value
    local currentTime = tick()
    
    -- ‡∏ñ‡πâ‡∏≤ Coins ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏î)
    if currentCoinValue ~= lastCoinValue then
        lastCoinValue = currentCoinValue
        lastUpdateTime = currentTime
        hasSentWebhook = false -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ webhook
    else
        -- ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ 10 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
        local timeDifference = currentTime - lastUpdateTime
        
        if timeDifference >= checkInterval and not hasSentWebhook then
            hasSentWebhook = true
            -- ‡∏™‡πà‡∏á webhook ‡∏Å‡πà‡∏≠‡∏ô kick ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏≠‡∏Å
            sendCoinsWarningWebhook()
            task.wait(2) -- ‡∏£‡∏≠‡πÉ‡∏´‡πâ webhook ‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à
            
            -- kick ‡∏ß‡∏ô‡πÄ‡∏ï‡∏∞‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ ‡∏û‡∏£‡πâ‡∏≠‡∏° pcall ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
            task.spawn(function()
                while true do
                    local success, error_msg = pcall(function()
                        game.Players.LocalPlayer:Kick("üö™ ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 10 ‡∏ô‡∏≤‡∏ó‡∏µ - ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏Å‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
                    end)
                    
                    if not success then
                        warn("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ kick ‡πÑ‡∏î‡πâ: " .. tostring(error_msg))
                        -- ‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡∏≥‡∏£‡∏≠‡∏á
                        pcall(function()
                            game:GetService("GuiService"):SetMenuIsOpen(false)
                            game.Players.LocalPlayer:Kick("üîÑ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏Å‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡∏≥‡∏£‡∏≠‡∏á")
                        end)
                    end
                    
                    task.wait(1) -- ‡∏£‡∏≠ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏Å‡πà‡∏≠‡∏ô kick ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ
                end
            end)
        end
    end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Mushtotal.json
local function updateMushTotal()
    local fileName = "Mushtotal.json"
    local mushData = { players = {} }
    local totalMush = 0

    -- ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    local success, existingData = pcall(function()
        return readfile(fileName)
    end)

    if success and existingData then
        local decodedData = HttpService:JSONDecode(existingData) or {}
        -- ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Å‡πà‡∏≤ ‡πÇ‡∏î‡∏¢‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà "total"
        local sourceData = decodedData.players or decodedData
        for key, value in pairs(sourceData) do
            if key ~= "total" and type(value) == "number" and value >= 0 then
                mushData.players[key] = value
            end
        end
    end

    -- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ö‡∏ß‡∏Å)
    if type(coinsObject.Value) == "number" and coinsObject.Value >= 0 then
        mushData.players[player.Name] = coinsObject.Value
    else
        warn("Invalid coin value for player " .. player.Name .. ": " .. tostring(coinsObject.Value))
    end

    -- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏£‡∏ß‡∏°‡πÄ‡∏´‡πá‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    for _, value in pairs(mushData.players) do
        if type(value) == "number" and value >= 0 then
            totalMush = totalMush + value
        end
    end
    mushData.total = totalMush

    -- ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå
    local successWrite = pcall(function()
        writefile(fileName, HttpService:JSONEncode(mushData))
    end)
    if not successWrite then
        warn("Failed to write to Mushtotal.json")
    end

    return mushData, totalMush
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: ‡∏™‡πà‡∏á Webhook ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô Mushtotal
local function sendMushTotalWebhook(mushData, totalMush)
    local fields = {}
    local playerCount = 0

    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if mushData.players and next(mushData.players) then
        for playerName, mushAmount in pairs(mushData.players) do
            if type(mushAmount) == "number" then
                table.insert(fields, {
                    name = "üë§ " .. playerName,
                    value = "```" .. tostring(mushAmount) .. " mush```",
                    inline = true
                })
                playerCount = playerCount + 1
            end
        end
    else
        table.insert(fields, {
            name = "‚ö†Ô∏è ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞",
            value = "```‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô```",
            inline = false
        })
    end

    -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏£‡∏ß‡∏°‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    table.insert(fields, {
        name = "üìä ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
        value = "```" .. tostring(totalMush) .. " mush```",
        inline = false
    })
    table.insert(fields, {
        name = "üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô",
        value = "```" .. tostring(playerCount) .. " ‡∏Ñ‡∏ô```",
        inline = false
    })

    local jsonData = createWebhookJson(
        "üçÑ **‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏´‡πá‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î**",
        "‡∏™‡∏£‡∏∏‡∏õ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏´‡πá‡∏î ‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 4",
        65280,
        fields
    )
    local success = sendWebhookRequest(jsonData, totalWebhookURL)
    if not success then
        warn("Failed to send Mushtotal webhook")
    end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á Mushtotal ‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤
local function startMushTotalTimer()
    local mushUpdateInterval = 20 * 60 -- 5 ‡∏ô‡∏≤‡∏ó‡∏µ (300 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    task.spawn(function()
        while true do
            local mushData, totalMush = updateMushTotal()
            sendMushTotalWebhook(mushData, totalMush)
            task.wait(mushUpdateInterval)
        end
    end)
end

-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Coins
local connection = RunService.Heartbeat:Connect(checkCoins)

-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ Mushtotal
startMushTotalTimer()

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
_G.stopCoinMonitor = function()
    if connection then
        connection:Disconnect()
    end
end
